rule all_dnabc:
    input:
        TARGET_DNABC

rule gzip_demux:
    input:
        PROJECT_DIR + "/" + config["demux"]["DEMUX"] + "/{sample}_{direction}.fastq"
    params:
        demux_gz_dir = PROJECT_DIR + "/" + config["demux"]["DEMUX_GZ"]
    output:
        PROJECT_DIR + "/" + config["demux"]["DEMUX_GZ"] + "/{sample}_{direction}.fastq.gz"
    shell:
        """
        mkdir -p {params.demux_gz_dir}
        gzip -c {input} > {output}
        """

rule run_dnabc:
    input:
        R1 = config["all"]["MUX_DIR"] + "/Undetermined_S0_L001_R1_001.fastq.gz",
        R2 = config["all"]["MUX_DIR"] + "/Undetermined_S0_L001_R2_001.fastq.gz"
    params:
        demux_dir = PROJECT_DIR + "/" + config["demux"]["DEMUX"],
        mismatch = config["demux"]["MISMATCH"],
        manifest_fp = PROJECT_DIR + "/" + config["demux"]["MANIFEST"],
        total_reads_fp = PROJECT_DIR + "/" +  config["demux"]["TOTAL_READS"]
    output:
        expand(PROJECT_DIR + "/" + config["demux"]["DEMUX"] + "/{sample}_{direction}.fastq", sample = SAMPLE_IDS, direction = ["R1", "R2"])
    shell:
        """
        dnabc.py \
        --output-dir {params.demux_dir} \
        --mismatches {params.mismatch} \
        --manifest-file {params.manifest_fp} \
        --total-reads-file {params.total_reads_fp} \
        {MAPPING_FP} {input.R1} {input.R2}
        """
